# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({})
class TagGetPutTags(BaseModel):
    """Information about the tag.

    :param slug: The tag's ID within a team or individual (non-team) user scope., defaults to None
    :type slug: str, optional
    """

    def __init__(self, slug: str = None):
        """Information about the tag.

        :param slug: The tag's ID within a team or individual (non-team) user scope., defaults to None
        :type slug: str, optional
        """
        if slug is not None:
            self.slug = self._define_str(
                "slug",
                slug,
                pattern="^[a-z][a-z0-9-]*[a-z0-9]+$",
                min_length=2,
                max_length=64,
            )


@JsonMap({})
class TagGetPut(BaseModel):
    """TagGetPut

    :param tags: A list of associated tags., defaults to None
    :type tags: List[TagGetPutTags], optional
    """

    def __init__(self, tags: List[TagGetPutTags] = None):
        """TagGetPut

        :param tags: A list of associated tags., defaults to None
        :type tags: List[TagGetPutTags], optional
        """
        if tags is not None:
            self.tags = self._define_list(tags, TagGetPutTags)
